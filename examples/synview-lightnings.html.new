<html>
  <head>
    <title>Synview example: Vector resource</title>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
    <link rel="stylesheet" href="https://openlayers.org/en/v6.5.0/css/ol.css" type="text/css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js" integrity="sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
    <script src="https://openlayers.org/en/v6.5.0/build/ol.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous"></script>
    <script src="../meteoJS.min.js" type="text/javascript"></script>
  </head>
  <body>
    <div class="container">
      <div class="row mb-3">
        <div class="col-12">
          <h1>Synview example: Vector resource</h1>
          <p class="text-muted">This example creates live randomly distributed
          flashes in a 5 minute period. The example shows how to put individual
          features in a <code>meteoJS.synview.resource.Vector</code> object
          and how to change "live" the style (switch between dots and lightning
          symbols) of these vector resources. Additionally, with the
          <code>postrender</code> event the count of lightnings is painted
          onto the layer.</p>
        </div>
      </div>
      <div class="row mb-3">
        <div class="col-12 d-flex">
          <div class="me-4">
            <button type="button" class="btn btn-primary play"></button>
          </div>
          <div class="align-self-center flex-grow-1">
            <input type="range" class="form-range"></input>
          </div>
          <div class="ms-4 me-4 align-self-center">
            <p class="text"></p>
          </div>
          <div class="btn-toolbar">
            <div class="btn-group">
              <button type="button" class="btn btn-primary dots active">Dots</button>
              <button type="button" class="btn btn-primary symbols">Symbols</button>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-12">
          <div class="row map" style="height: 700px; position:relative;">
          </div>
        </div>
      </div>
    </div>
  </body>
  <script type="text/javascript">
$(document).ready(function () {
  let timeline = new meteoJS.Timeline();
  let animation = new meteoJS.timeline.Animation({
    timeline: timeline
  });
  animation.start();
  new meteoJS.timeline.animation.ToggleButton({
    animation: animation,
    node: $('button.play'),
    startedContent: $('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pause-fill" viewBox="0 0 16 16"><path d="M5.5 3.5A1.5 1.5 0 0 1 7 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5zm5 0A1.5 1.5 0 0 1 12 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5z"/></svg>'),
    stoppedContent: $('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-play-fill" viewBox="0 0 16 16"><path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"/></svg>')
  });
  new meteoJS.timeline.visualisation.Text({
    timeline: timeline,
    node: $('p.text'),
    getTimeText: meteoJS.timeline.makeTimeTextCallbackFunction(moment),
    format: 'HH:mm, ddd, DD. MMM YYYY [UTC]'
  });
  new meteoJS.timeline.visualisation.Slider({
    timeline: timeline,
    node: $('input[type=range]'),
    animation: animation // this stops animation on user interaction on slider
  });
  let map = new ol.Map({
    target: $('div.row.map').get().shift(),
    view: new ol.View({
      center: ol.proj.fromLonLat([8.5, 46.8]),
      zoom: 8
    })
  });
  let synview = new meteoJS.Synview({
    map: new meteoJS.synview.map.MapOL({
      map: map
    }),
    timeline: timeline,
    tooltip: new meteoJS.tooltip.BootstrapTooltip({
      bootstrapOptions: {
        offset: '5px,5px',
        container: $('div.row.map').get().shift()
      }
    })
  });
  synview.appendType(new meteoJS.synview.Type({
    zIndex: 0,
    resources: [new meteoJS.synview.resource.OSM({
      url: "https://api.maptiler.com/maps/basic/{z}/{x}/{y}.png?key=Els4NwvjjarAG3Hha6Mw",
      ol: {
        source: {
          attributions: [
            '<a href="https://www.maptiler.com/copyright/" target="_blank">© MapTiler</a>',
            '<a href="https://www.openstreetmap.org/copyright" target="_blank">© OpenStreetMap contributors</a>'
          ]
        }
      }
    })]
  }));
  let styleDots = new ol.style.Style({
    image: new ol.style.Circle({
      radius: 8,
      fill: new ol.style.Fill({
        color: '#f9c7b8'
      }),
      stroke: new ol.style.Stroke({
        color: '#ff4f1e',
        width: 2
      })
    })
  });
  let styleSymbols = new ol.style.Style({
    text: new ol.style.Text({
      scale: 4,
      text: '☇',
      textAlign: 'center',
      textBaseline: 'middle',
      fill: new ol.style.Fill({
        color: '#f9c7b8'
      }),
      stroke: new ol.style.Stroke({
        color: '#ff4f1e',
        width: 1
      })
    })
  });
  let startDate = new Date(Date.UTC(2018, 7, 26, 12));
  let resources = [];
  for (let i=0; i<=60; i+=5) {
    let features = new ol.Collection();
    for (let j=0; j<Math.round(Math.random()*10); j++) {
      // Random flashes within a moving cell
      let coord = [8 + i/60 + Math.random(),
                   46 + i/60 + Math.random()];
      let feature = new ol.Feature(
        new ol.geom.Point(ol.proj.fromLonLat(coord))
      );
      feature.set('amplitude', Math.floor(Math.random() * Math.floor(100))/10);
      features.push(feature);
    }
    resources.push(new meteoJS.synview.resource.Vector({
      datetime: new Date(startDate.valueOf() + i*60*1000),
      ol: {
        source: new ol.source.Vector({
          features: features
        }),
        style: styleDots,
        events: {
          postrender: function (event, layer) {
            /* Count flashes inside extent */
            let count = 0;
            layer.getSource().forEachFeatureInExtent(event.frameState.extent,
                                                     function () { count++; });
            if (count > 0) {
              let ctx = event.context;
              let _lineWidth = ctx.lineWidth;
              let _fillStyle = ctx.fillStyle;
              let _font = ctx.font;
              let _textAlign = ctx.textAlign;
              ctx.fillStyle = 'red';
              ctx.fillRect(48,8,182,32);
              ctx.fillStyle = _fillStyle;
              ctx.font = '20px sans-serif';
              ctx.textAlign = 'left';
              ctx.fillText('Lightnings count: '+count, 50, 30);
              ctx.lineWidth = _lineWidth;
              ctx.font = _font;
              ctx.textAlign = _textAlign;
            }
          }
        }
      }
    }));
  }
  let type = new meteoJS.synview.Type({
    tooltip: event => {
      if (!event.feature)
        return;
      
      let content = $('<div>').addClass('text-white');
      content.text(`Amplitude: ${event.feature.get('amplitude')} kA`);
      return content;
    }
  });
  synview.appendType(type);
  type.setResources(resources);
  
  // Buttons functionality
  $('button.dots').click(function () {
    $('button').removeClass('active');
    $(this).addClass('active');
    type.setResourcesOLStyle(styleDots);
  });
  $('button.symbols').click(function () {
    $('button').removeClass('active');
    $(this).addClass('active');
    type.setResourcesOLStyle(styleSymbols);
  });
});
  </script>
</html>